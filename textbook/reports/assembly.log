Traceback (most recent call last):
  File "/opt/conda/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/opt/conda/lib/python3.9/site-packages/nbclient/client.py", line 1112, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/conda/lib/python3.9/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/conda/lib/python3.9/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/opt/conda/lib/python3.9/asyncio/base_events.py", line 642, in run_until_complete
    return future.result()
  File "/opt/conda/lib/python3.9/site-packages/nbclient/client.py", line 553, in async_execute
    await self.async_execute_cell(
  File "/opt/conda/lib/python3.9/site-packages/nbclient/client.py", line 857, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/opt/conda/lib/python3.9/site-packages/nbclient/client.py", line 760, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import requests
from notebook.notebookapp import list_running_servers
# get server info so that we can make api calls 
servers=list(list_running_servers())

info=next(list_running_servers())
base_url=info['url']
api_url=base_url + 'api/terminals'
api_token=info['token']

# get list of current terminals so that we can reuse this if enough exist 
# otherwise we will create new ones as needed
r=requests.get(url=api_url, headers={'Authorization': 'token ' + api_token})
TERMINALS=r.json()

try:
    EDITORTERM=TERMINALS[0]['name']
except IndexError:
    # create a terminal for our editor
    r=requests.post(url=api_url, headers={'Authorization': 'token ' + api_token})
    c=r.json()
    EDITORTERM=c['name']

try:
    BUILDTERM=TERMINALS[1]['name']
except IndexError:   
    # create a terminal for running out builds
    r=requests.post(url=api_url, headers={'Authorization': 'token ' + api_token})
    c=r.json()
    BUILDTERM=c['name']

try:
    DEBUGGERTERM=TERMINALS[2]['name']
except IndexError:   
    # create a terminal for running gdb
    r=requests.post(url=api_url, headers={'Authorization': 'token ' + api_token})
    c=r.json()
    DEBUGGERTERM=c['name']
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mKeyError[0m                                  Traceback (most recent call last)
[0;32m/tmp/ipykernel_1293/1079121966.py[0m in [0;36m<module>[0;34m[0m
[1;32m     15[0m [0;34m[0m[0m
[1;32m     16[0m [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 17[0;31m     [0mEDITORTERM[0m[0;34m=[0m[0mTERMINALS[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m[[0m[0;34m'name'[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     18[0m [0;32mexcept[0m [0mIndexError[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     19[0m     [0;31m# create a terminal for our editor[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;31mKeyError[0m: 0
KeyError: 0

